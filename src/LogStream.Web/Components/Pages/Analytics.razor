@page "/analytics"
@page "/analytics/{TenantId}"
@using LogStream.Web.Services
@using LogStream.Web.Models
@inject IDashboardService DashboardService
@inject IJSRuntime JSRuntime
@inject ISnackbar Snackbar

<PageTitle>Analytics - LogStream Analytics</PageTitle>

<div class="analytics-container p-md">
    <MudContainer MaxWidth="MaxWidth.ExtraExtraLarge">
        <!-- Header -->
        <MudPaper Elevation="2" Class="pa-4 mb-4 bg-surface rounded-lg">
            <MudGrid AlignItems="Center">
                <MudItem xs="12" md="8">
                    <MudText Typo="Typo.h4" Class="mb-2" role="heading" aria-level="1">
                        <MudIcon Icon="Icons.Material.Filled.Analytics" Class="mr-2" aria-hidden="true" />
                        Advanced Analytics
                    </MudText>
                    <MudText Typo="Typo.body2" Class="text-secondary">
                        Deep insights and trend analysis â€¢ Tenant: @(TenantId ?? "All Tenants")
                    </MudText>
                </MudItem>
                <MudItem xs="12" md="4" Class="d-flex justify-end">
                    <MudButton StartIcon="Icons.Material.Filled.FileDownload" 
                              Variant="Variant.Filled" 
                              Color="Color.Primary"
                              Class="mr-2">
                        Export Report
                    </MudButton>
                    <MudButton StartIcon="Icons.Material.Filled.Schedule" 
                              Variant="Variant.Outlined" 
                              Color="Color.Secondary">
                        Schedule Report
                    </MudButton>
                </MudItem>
            </MudGrid>
        </MudPaper>

        <!-- Analytics Content -->
        <MudGrid Spacing="3">
            <!-- Trend Analysis -->
            <MudItem xs="12" lg="8">
                <MudPaper Elevation="2" Class="pa-4 bg-surface rounded-lg">
                    <MudText Typo="Typo.h6" Class="mb-3">
                        <MudIcon Icon="Icons.Material.Filled.TrendingUp" Class="mr-2" />
                        Log Volume Trends (Last 30 Days)
                    </MudText>
                    <div class="chart-container">
                        <canvas id="trendsChart"></canvas>
                    </div>
                </MudPaper>
            </MudItem>

            <!-- Performance Metrics -->
            <MudItem xs="12" lg="4">
                <MudPaper Elevation="2" Class="pa-4 bg-surface rounded-lg">
                    <MudText Typo="Typo.h6" Class="mb-3">
                        <MudIcon Icon="Icons.Material.Filled.Speed" Class="mr-2" />
                        Performance Metrics
                    </MudText>
                    <div class="metrics-list">
                        <div class="metric-item mb-3">
                            <div class="d-flex justify-space-between align-center mb-1">
                                <MudText Typo="Typo.body2">Avg Response Time</MudText>
                                <MudText Typo="Typo.body2" Class="font-semibold">245ms</MudText>
                            </div>
                            <MudProgressLinear Value="75" Color="Color.Success" Class="rounded-sm" />
                        </div>
                        <div class="metric-item mb-3">
                            <div class="d-flex justify-space-between align-center mb-1">
                                <MudText Typo="Typo.body2">Error Rate</MudText>
                                <MudText Typo="Typo.body2" Class="font-semibold">2.3%</MudText>
                            </div>
                            <MudProgressLinear Value="23" Color="Color.Warning" Class="rounded-sm" />
                        </div>
                        <div class="metric-item mb-3">
                            <div class="d-flex justify-space-between align-center mb-1">
                                <MudText Typo="Typo.body2">Throughput</MudText>
                                <MudText Typo="Typo.body2" Class="font-semibold">1,234 logs/s</MudText>
                            </div>
                            <MudProgressLinear Value="85" Color="Color.Info" Class="rounded-sm" />
                        </div>
                    </div>
                </MudPaper>
            </MudItem>

            <!-- Log Level Distribution -->
            <MudItem xs="12" md="6">
                <MudPaper Elevation="2" Class="pa-4 bg-surface rounded-lg">
                    <MudText Typo="Typo.h6" Class="mb-3">
                        <MudIcon Icon="Icons.Material.Filled.PieChart" Class="mr-2" />
                        Log Level Distribution
                    </MudText>
                    <div class="chart-container" style="height: 250px;">
                        <canvas id="logLevelChart"></canvas>
                    </div>
                </MudPaper>
            </MudItem>

            <!-- Application Usage -->
            <MudItem xs="12" md="6">
                <MudPaper Elevation="2" Class="pa-4 bg-surface rounded-lg">
                    <MudText Typo="Typo.h6" Class="mb-3">
                        <MudIcon Icon="Icons.Material.Filled.Apps" Class="mr-2" />
                        Application Usage
                    </MudText>
                    <div class="chart-container" style="height: 250px;">
                        <canvas id="appUsageChart"></canvas>
                    </div>
                </MudPaper>
            </MudItem>

            <!-- Insights & Recommendations -->
            <MudItem xs="12">
                <MudPaper Elevation="2" Class="pa-4 bg-surface rounded-lg">
                    <MudText Typo="Typo.h6" Class="mb-3">
                        <MudIcon Icon="Icons.Material.Filled.Lightbulb" Class="mr-2" />
                        Insights & Recommendations
                    </MudText>
                    <MudGrid>
                        <MudItem xs="12" md="4">
                            <MudAlert Severity="Severity.Info" Class="mb-2">
                                <MudText Typo="Typo.body2" Class="font-semibold">Peak Usage Detected</MudText>
                                <MudText Typo="Typo.caption">
                                    Log volume peaks at 2PM daily. Consider scaling resources.
                                </MudText>
                            </MudAlert>
                        </MudItem>
                        <MudItem xs="12" md="4">
                            <MudAlert Severity="Severity.Warning" Class="mb-2">
                                <MudText Typo="Typo.body2" Class="font-semibold">Error Rate Increase</MudText>
                                <MudText Typo="Typo.caption">
                                    WebApp service showing 15% error rate increase this week.
                                </MudText>
                            </MudAlert>
                        </MudItem>
                        <MudItem xs="12" md="4">
                            <MudAlert Severity="Severity.Success" Class="mb-2">
                                <MudText Typo="Typo.body2" Class="font-semibold">Performance Improved</MudText>
                                <MudText Typo="Typo.caption">
                                    Database response time improved by 25% after optimization.
                                </MudText>
                            </MudAlert>
                        </MudItem>
                    </MudGrid>
                </MudPaper>
            </MudItem>
        </MudGrid>
    </MudContainer>
</div>

<style>
    .analytics-container {
        background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
        min-height: 100vh;
    }
    
    .metric-item {
        padding: 12px;
        border-radius: var(--radius-md);
        background: rgba(102, 126, 234, 0.05);
        border: 1px solid rgba(102, 126, 234, 0.1);
    }
    
    .chart-container {
        position: relative;
        height: 350px;
        width: 100%;
    }
    
    @media (max-width: 768px) {
        .chart-container {
            height: 250px;
        }
    }
</style>

@code {
    [Parameter] public string? TenantId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await LoadAnalytics();
    }

    private async Task LoadAnalytics()
    {
        // Simulate loading analytics data
        await Task.Delay(1000);
        
        // Initialize charts
        await InitializeCharts();
    }

    private async Task InitializeCharts()
    {
        // Sample data for trends chart
        var trendsData = new
        {
            labels = new[] { "Week 1", "Week 2", "Week 3", "Week 4" },
            datasets = new[]
            {
                new
                {
                    label = "Total Logs",
                    data = new[] { 12000, 15000, 18000, 22000 },
                    borderColor = "#667eea",
                    backgroundColor = "rgba(102, 126, 234, 0.1)",
                    tension = 0.4
                }
            }
        };

        await JSRuntime.InvokeVoidAsync("window.initializeChart", "trendsChart", "line", trendsData, new
        {
            responsive = true,
            maintainAspectRatio = false,
            plugins = new
            {
                legend = new { position = "top" }
            }
        });

        // Sample data for log level chart
        var logLevelData = new
        {
            labels = new[] { "INFO", "WARN", "ERROR", "DEBUG", "TRACE" },
            datasets = new[]
            {
                new
                {
                    data = new[] { 45, 25, 15, 10, 5 },
                    backgroundColor = new[] { "#4caf50", "#ff9800", "#f44336", "#2196f3", "#9e9e9e" },
                    borderWidth = 2
                }
            }
        };

        await JSRuntime.InvokeVoidAsync("window.initializeChart", "logLevelChart", "doughnut", logLevelData, new
        {
            responsive = true,
            maintainAspectRatio = false,
            plugins = new
            {
                legend = new { position = "right" }
            }
        });

        // Sample data for app usage chart
        var appUsageData = new
        {
            labels = new[] { "WebApp", "API", "Worker", "Database", "Cache" },
            datasets = new[]
            {
                new
                {
                    label = "Usage %",
                    data = new[] { 35, 25, 20, 15, 5 },
                    backgroundColor = "rgba(102, 126, 234, 0.8)",
                    borderColor = "#667eea",
                    borderWidth = 1
                }
            }
        };

        await JSRuntime.InvokeVoidAsync("window.initializeChart", "appUsageChart", "bar", appUsageData, new
        {
            responsive = true,
            maintainAspectRatio = false,
            plugins = new
            {
                legend = new { display = false }
            }
        });
    }
}